[project]
name = "stats-learning-backend"
version = "0.1.0"
description = "Backend for Duolingo-style Data Literacy App"
authors = [{name = "Your Team", email = "team@example.com"}]
requires-python = ">=3.9"

dependencies = [
    # Core Framework
    "fastapi>=0.109.0",           # Web framework for building APIs
    "uvicorn[standard]>=0.27.0",  # ASGI server to run FastAPI
    
    # Database
    "sqlalchemy>=2.0.0",          # ORM for database operations
    "alembic>=1.13.0",            # Database migrations
    "psycopg[binary]>=3.1.0",     # PostgreSQL adapter
    
    # Data Validation
    "pydantic>=2.5.0",            # Data validation using Python type hints
    "pydantic-settings>=2.1.0",   # Settings management
    "email-validator>=2.1.0",     # Email validation
    
    # Security
    "passlib[bcrypt]>=1.7.4",     # Password hashing
    "python-jose[cryptography]>=3.3.0",  # JWT tokens
    "python-multipart>=0.0.6",    # Form data parsing
    
    # Redis & Caching
    "redis>=5.0.0",               # Redis client for caching
    "hiredis>=2.3.0",             # C parser for Redis (performance)
    
    # Scientific Computing
    "numpy>=1.26.0",              # Numerical computing
    "scipy>=1.11.0",              # Scientific computing
    "pandas>=2.1.0",              # Data manipulation
    
    # Utilities
    "python-dotenv>=1.0.0",       # Load .env files
    "tenacity>=8.2.0",            # Retry logic
    "structlog>=24.1.0",          # Structured logging
    "httpx>=0.25.0",              # HTTP client
    "requests>=2.31.0",           # HTTP requests for integration tests
    "faker>=22.0.0",              # Generate fake data for testing
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",              # Testing framework
    "pytest-asyncio>=0.21.0",     # Async test support
    "pytest-cov>=4.1.0",          # Coverage reporting
    "black>=23.12.0",             # Code formatter
    "ruff>=0.1.0",                # Linter
    "mypy>=1.8.0",                # Type checking
    "pre-commit>=3.6.0",          # Git hooks
]

[build-system]
requires = ["setuptools>=69.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["app*"]
exclude = ["tests*", "k8s*", "logs*", "alembic*"]

[tool.black]
line-length = 88
target-version = ['py39']

[tool.ruff]
line-length = 88
select = ["E", "F", "I", "N", "W", "B", "C90", "D", "UP", "YTT", "S", "BLE", "FBT", "A", "C4", "DTZ", "T10", "EM", "EXE", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SIM", "TID", "TCH", "INT", "ARG", "ERA", "PGH", "PLC", "PLE", "PLR", "PLW", "TRY", "RUF"]
ignore = ["D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107"]

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true


